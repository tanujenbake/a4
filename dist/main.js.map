{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from '../home/home.component';\nimport { LoginComponent } from '../login/login.component';\n\n\nconst routes: Routes =[\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  {path : '**', component : HomeComponent}\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from '../app/app-routing/app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".r1{\\n\\tbackground-color: #6362bb;\\n    color: white;\\n    padding-top: 100px;\\n    text-align: center;\\n    height: 850px;\\n    width: 100%;\\n    line-height: 20px;\\n    font-family: \\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;\\n}\\n\\n.r1-btn {\\n\\tmargin: 10px 0px;\\n    padding: 10px 20px;\\n    font-size: 18px;\\n    color: white;\\n    border-radius: 10px;\\n    background-color: #1eb995;\\n}\\n\\n.r1-o {\\n\\tpadding-top: 20px;\\n    font-size: 18px;\\n}\\n\\n.r1-img{\\n    height: auto;\\n    width: 100%;\\n    padding-top: 50px;\\n    top: 80px;\\n}\\n\\n.r2{\\n    top: 300px;\\n    position: relative;\\n    line-height: 5px;\\n    font-family: \\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 0px;\\\">\\n\\t<div class=\\\"r1\\\">\\n\\t\\t<h1>We help startups launch their awesome website</h1>\\n\\t\\t<p>It is a long established fact that a reader will be of a page when looking at its layout.</p>\\n\\t\\t<button type=\\\"button\\\" name=\\\"Signup\\\" class=\\\"r1-btn\\\"><a href=\\\"#\\\" style=\\\"text-decoration: none; color: white;\\\">Free Signup</a></button>\\n\\t\\t<p class=\\\"r1-o\\\">Watch the overview</p>\\n\\t\\t<img class=\\\"r1-img\\\"src=\\\"../assets/macbook.png\\\">\\n\\t</div>\\n\\t<div class=\\\"r2\\\" style=\\\"text-align: center;\\\">\\n\\t\\t<div class=\\\"cnc\\\">\\n\\t\\t\\t<h1> Our Features</h1>\\n\\t\\t\\t<p>Lorem ipsum dolor sit amet</p>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".con{\\n    /*background: linear-gradient(blue, slateblue);*/\\n    width: 100%;\\n    height: 100vh;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.centered-div{\\n    width: auto;\\n    height: auto;\\n    margin: 10px;\\n    padding:5px;\\n   /* background-color: #FBFCFC;\\n    color:white;\\n    border-radius: 15px;*/\\n}\\n\\n.glyphicn{\\n    position: relative;\\n    top: 1px;\\n    display: inline-block;\\n    font-family: 'Glyphicons Halflings';\\n    color: white;\\n    font-style: normal;\\n    font-weight: 400;\\n    line-height: 1;\\n}\\n\\n.form{\\n    padding-right: 20px;\\n    padding-left: 30px;\\n    padding-bottom: 40px;\\n    padding-top: 50px;\\n    background-color: white;\\n    border-radius: 7px;\\n}\\n\\n.wrapper {\\n    background: linear-gradient(blue, slateblue);\\n}\\n\\n/*.inner {\\n    background-color: #FBFCFC;\\n    color:white;\\n    border-radius: 15px;\\n}*/\\n\\n.heading {\\n    text-align: center;\\n    color: white;\\n    font-family: 'Abril Fatface'; \\n    margin-top: 20px; \\n    margin-bottom: 10px;\\n}\\n\\n.tstyle {\\n        text-align: center;\\n        color: white;\\n        margin:0px;\\n}\\n\\n.lstyle {\\n    display: inline-block;\\n    max-width: 100%;\\n    padding-bottom: 5px;\\n    font-weight: 700;\\n}\\n\\n.btn {\\n   /* width: 50%;*/\\n    padding: 10px 20px;\\n    color: white;\\n    border-radius: 7px;\\n    background-color: #1eb995;\\n}\\n\\n.hrf{\\n    text-decoration: none;\\n    color: white;\\n}\\n\\na.hrf:hover{\\n    color: blue;\\n}\\n\\n.hstyle{\\n    padding-top: 20px; \\n    margin:0px;\\n}\\n\\n.fs{\\n    text-align: center;\\n}\\n\\n.banchor{\\n    text-decoration: none; \\n    color: white; \\n    font-size: 20px;\\n}\"","module.exports = \"<!-- <app-navbar></app-navbar> -->\\n<div class=\\\"wrapper\\\">\\n<div class=\\\"container-fluid\\\">\\n\\t<h1 class=\\\"hstyle\\\"><a href=\\\"#\\\"><span class=\\\"glyphicn glyphicon glyphicon-home\\\"><i class=\\\"fa fa-home\\\"></i></span></a></h1>\\n</div>\\n<div class=\\\"container-fluid con\\\">\\n    <div class=\\\"centered-div\\\">\\n    \\t<h1 class=\\\"heading\\\">Canvab</h1>\\n    \\t<div class=\\\"form\\\">\\n          <form [formGroup]=\\\"loginform\\\" novalidate (ngSubmit)=\\\"onSubmitLoginDetails(loginform.value)\\\">\\n                      <div class=\\\"container\\\">\\n                        <!-- <label for=\\\"email\\\"><b>Email</b></label> -->\\n                        <!-- <input type=\\\"email\\\" placeholder=\\\"Enter Email\\\" name=\\\"Email\\\" required> -->\\n                        <div class=\\\"form-group\\\">\\n                        <input type=\\\"text\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n                    \\t</div>\\n                        <div *ngFor=\\\"let validation of login_validation_messages.email\\\">\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"loginform.get('email').hasError(validation.type) && (loginform.get('email').dirty || loginform.get('email').touched)\\\" style=\\\"color: crimson;\\\">{{validation.message}}</div>\\n                        </div>\\n\\n                      <!--   <label for=\\\"psw\\\"><b>Password</b></label> -->\\n                        <!-- <input type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"psw\\\" required> -->\\n                        <div class=\\\"form-group\\\">\\n                        <input type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\n                    \\t</div>\\n                        <div *ngFor=\\\"let validation of login_validation_messages.password\\\">\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"loginform.get('password').hasError(validation.type) && (loginform.get('password').dirty || loginform.get('password').touched)\\\" style=\\\"color: crimson;\\\">{{validation.message}}</div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                        <label>\\n                            <input type=\\\"checkbox\\\" checked=\\\"checked\\\" name=\\\"remember\\\"> Remember me\\n                          </label>\\n                      \\t</div>\\n                        </div>\\n                        <!-- <button type=\\\"submit\\\">Login</button> -->\\n                        <!-- <button color=\\\"primary\\\" button type=\\\"submit\\\" [disabled]=\\\"!loginform.valid\\\" *ngIf=\\\"loginform.valid\\\">\\n                            <a href=\\\"#\\\" style=\\\"text-decoration: none; color: azure; font-size: 20px;\\\">Submit</a>\\n                        </button> -->\\n                        <div class=\\\"form-group fs\\\">\\n                         <button class=\\\"btn\\\" button type=\\\"submit\\\" [disabled]=\\\"!loginform.valid\\\" *ngIf=\\\"loginform.valid\\\">\\n                            <a href=\\\"#\\\" class=\\\"banchor\\\">Get In</a>\\n                        </button>\\n                    \\t</div>\\n                      <!-- <div class=\\\"container\\\" style=\\\"background-color:#f1f1f1\\\">\\n                        <button type=\\\"button\\\" class=\\\"cancelbtn\\\">Cancel</button>\\n                        <span class=\\\"psw\\\">Forgot <a href=\\\"#\\\">password?</a></span>\\n                      </div> -->\\n          </form>\\n        </div>\\n        <br>\\n        <br>\\n        <br>\\n        <p class=\\\"tstyle\\\"><a href=\\\"#\\\" class=\\\"hrf\\\">Forgot Your Password</a></p>\\n \\t\\t<p class=\\\"tstyle\\\"><label class=\\\"lstyle\\\">Don't have Account ?</label>\\n \\t\\t<a href=\\\"#\\\" class=\\\"hrf\\\"><b>Create an Account</b></a></p>\\n    </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\t\n\tloginform: FormGroup;\n\n\t login_validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required' },\n      { type: 'pattern', message: 'Enter a valid email' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required' },\n      { type: 'minlength', message: 'Password must be at least 8 characters long' },\n      { type: 'pattern', message: 'should have 1 uppercase,lowercase,and one number'}\n    ]\n  }\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n  \t\tthis.loginnform();\n  }\n\n  loginnform() {\n    this.loginform = this.fb.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern('(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$')\n      ]))\n    })\n  }\n\n  onSubmitLoginDetails(value) {\n    console.log(value);\n  }\n\n}\n","module.exports = \".nav{\\n\\tposition: fixed;\\n\\tmargin-top: 20px;\\n    width: 100%;\\n}\\n\\n.had {\\n\\tposition: fixed;\\n    background-color: black;\\n    width: 100%;\\n    color: white;\\n    height: 30px;\\n    left: 0;\\n    top: 0\\n}\\n\\n.left-one{\\n\\tfloat: left;\\n    padding-left: 20px;\\n    color: white;\\n    font-family: \\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;\\n}\\n\\n.pr2 a {\\n\\tfloat: right;\\n    color: white;\\n    padding-left: 15px;\\n    padding-right: 15px;\\n}\"","module.exports = \"<div class=\\\"had\\\">\\n  <div class=\\\"pr1\\\">\\n  <p class=\\\"left-one\\\">Help: +1 111 222 333</p>\\n  </div>\\n  <div class=\\\"pr2\\\">\\n    <a href=\\\"#\\\"><i class=\\\"fa fa-instagram\\\"></i></a>\\n    <a href=\\\"#\\\"><i class=\\\"fa fa-twitter\\\"></i></a>\\n    <a href=\\\"#\\\"><i class=\\\"fa fa-facebook\\\"></i></a>\\n  </div>\\n</div>\\n<!-- <p>Help: +1 111 222 333</p> -->\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark nav\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Canvab</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Features\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Feature 1</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Feature 2</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Feature 3</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Services</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Pricing</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Client</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">FAQ</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Contact</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav my-2 my-lg-0\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Try it Free</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"login\\\">Sign In</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}